// <auto-generated />
using System;
using CRMWepApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRMWepApi.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    [Migration("20251003065527_AddPipelineAssignments")]
    partial class AddPipelineAssignments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRMWepApi.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CRMWepApi.Models.CommunicationLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("DealId")
                        .HasColumnType("int");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesRepId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogId");

                    b.HasIndex("DealId");

                    b.HasIndex("LeadId");

                    b.HasIndex("SalesRepId");

                    b.ToTable("CommunicationLogs");
                });

            modelBuilder.Entity("CRMWepApi.Models.Deal", b =>
                {
                    b.Property<int>("DealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DealId"));

                    b.Property<DateTime?>("ActualCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedToSalesRep")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToSrm")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByManager")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBySrm")
                        .HasColumnType("int");

                    b.Property<string>("DealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApprovedByManager")
                        .HasColumnType("bit");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesRepManagerSrmId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DealId");

                    b.HasIndex("AssignedToSalesRep");

                    b.HasIndex("AssignedToSrm");

                    b.HasIndex("CreatedByManager");

                    b.HasIndex("CreatedBySrm");

                    b.HasIndex("LeadId");

                    b.HasIndex("SalesRepManagerSrmId");

                    b.HasIndex("StageId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("CRMWepApi.Models.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeadId"));

                    b.Property<int?>("AssignedToSalesRep")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToSrm")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByManager")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBySrm")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesRepManagerSrmId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("LeadId");

                    b.HasIndex("AssignedToSalesRep");

                    b.HasIndex("AssignedToSrm");

                    b.HasIndex("CreatedByManager");

                    b.HasIndex("CreatedBySrm");

                    b.HasIndex("SalesRepManagerSrmId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("CRMWepApi.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("CRMWepApi.Models.PipelineStage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageId"));

                    b.Property<int?>("AssignedToSalesRepId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToSrmId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StageOrder")
                        .HasColumnType("int");

                    b.HasKey("StageId");

                    b.ToTable("PipelineStages");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRep", b =>
                {
                    b.Property<int>("SalesRepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesRepId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SrmId")
                        .HasColumnType("int");

                    b.HasKey("SalesRepId");

                    b.HasIndex("SrmId");

                    b.ToTable("SalesReps");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRepManager", b =>
                {
                    b.Property<int>("SrmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SrmId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SrmId");

                    b.HasIndex("ManagerId");

                    b.ToTable("SalesRepManagers");
                });

            modelBuilder.Entity("CRMWepApi.Models.CommunicationLog", b =>
                {
                    b.HasOne("CRMWepApi.Models.Deal", "Deal")
                        .WithMany("CommunicationLogs")
                        .HasForeignKey("DealId");

                    b.HasOne("CRMWepApi.Models.Lead", "Lead")
                        .WithMany("CommunicationLogs")
                        .HasForeignKey("LeadId");

                    b.HasOne("CRMWepApi.Models.SalesRep", "SalesRep")
                        .WithMany("CommunicationLogs")
                        .HasForeignKey("SalesRepId");

                    b.Navigation("Deal");

                    b.Navigation("Lead");

                    b.Navigation("SalesRep");
                });

            modelBuilder.Entity("CRMWepApi.Models.Deal", b =>
                {
                    b.HasOne("CRMWepApi.Models.SalesRep", "SalesRep")
                        .WithMany("Deals")
                        .HasForeignKey("AssignedToSalesRep");

                    b.HasOne("CRMWepApi.Models.SalesRepManager", "AssignedSrm")
                        .WithMany()
                        .HasForeignKey("AssignedToSrm")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRMWepApi.Models.Manager", "Manager")
                        .WithMany("DealsCreated")
                        .HasForeignKey("CreatedByManager");

                    b.HasOne("CRMWepApi.Models.SalesRepManager", "CreatedSrm")
                        .WithMany()
                        .HasForeignKey("CreatedBySrm")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRMWepApi.Models.Lead", "Lead")
                        .WithMany("Deals")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMWepApi.Models.SalesRepManager", null)
                        .WithMany("DealsCreated")
                        .HasForeignKey("SalesRepManagerSrmId");

                    b.HasOne("CRMWepApi.Models.PipelineStage", "Stage")
                        .WithMany("Deals")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedSrm");

                    b.Navigation("CreatedSrm");

                    b.Navigation("Lead");

                    b.Navigation("Manager");

                    b.Navigation("SalesRep");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("CRMWepApi.Models.Lead", b =>
                {
                    b.HasOne("CRMWepApi.Models.SalesRep", "SalesRep")
                        .WithMany("Leads")
                        .HasForeignKey("AssignedToSalesRep");

                    b.HasOne("CRMWepApi.Models.SalesRepManager", "AssignedSrm")
                        .WithMany()
                        .HasForeignKey("AssignedToSrm")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRMWepApi.Models.Manager", "Manager")
                        .WithMany("LeadsCreated")
                        .HasForeignKey("CreatedByManager");

                    b.HasOne("CRMWepApi.Models.SalesRepManager", "CreatedSrm")
                        .WithMany()
                        .HasForeignKey("CreatedBySrm")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CRMWepApi.Models.SalesRepManager", null)
                        .WithMany("LeadsCreated")
                        .HasForeignKey("SalesRepManagerSrmId");

                    b.Navigation("AssignedSrm");

                    b.Navigation("CreatedSrm");

                    b.Navigation("Manager");

                    b.Navigation("SalesRep");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRep", b =>
                {
                    b.HasOne("CRMWepApi.Models.SalesRepManager", "SalesRepManager")
                        .WithMany("SalesReps")
                        .HasForeignKey("SrmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesRepManager");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRepManager", b =>
                {
                    b.HasOne("CRMWepApi.Models.Manager", "Manager")
                        .WithMany("SalesRepManagers")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("CRMWepApi.Models.Deal", b =>
                {
                    b.Navigation("CommunicationLogs");
                });

            modelBuilder.Entity("CRMWepApi.Models.Lead", b =>
                {
                    b.Navigation("CommunicationLogs");

                    b.Navigation("Deals");
                });

            modelBuilder.Entity("CRMWepApi.Models.Manager", b =>
                {
                    b.Navigation("DealsCreated");

                    b.Navigation("LeadsCreated");

                    b.Navigation("SalesRepManagers");
                });

            modelBuilder.Entity("CRMWepApi.Models.PipelineStage", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRep", b =>
                {
                    b.Navigation("CommunicationLogs");

                    b.Navigation("Deals");

                    b.Navigation("Leads");
                });

            modelBuilder.Entity("CRMWepApi.Models.SalesRepManager", b =>
                {
                    b.Navigation("DealsCreated");

                    b.Navigation("LeadsCreated");

                    b.Navigation("SalesReps");
                });
#pragma warning restore 612, 618
        }
    }
}
